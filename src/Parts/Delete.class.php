<?php
namespace Database\Parts;


use Database\AbstractClasses\Parts_Abtract;
use Database\Interfaces\Part;
use Database\Statements\Basic\Field;
use Database\Statements\From;
use Database\Statements\Where\Where;

class Delete extends Parts_Abtract implements Part {

    /**
     * @var array
     */
    protected $_sql_parts = [];

    /**
     * @var array
     */
    protected $_queryBuild = [
        'from',
        'where'
    ];

    /**
     * @param string $from
     * @return Delete
     */
    public function addFrom($from): self {
        if(!isset($this->_sql_parts['from'])) {
            $this->_sql_parts['from'] = new From();
        }
        $this->_sql_parts['from']->setTables($from);
        return $this;
    }

    /**
     * @param array|null $where
     * @return $this|Where
     * @throws \Database\Exceptions\DatabaseExceptions
     * @throws \Database\Exceptions\DatabaseStatementExceptions
     */
    public function addWhere(array $where = null) {
        if($where !== null) {
            if(!isset($this->_sql_parts['where'])){
                $this->_sql_parts['where'] = new Where($where);
            } else {
                $this->_sql_parts['where']->setWhere($where);
            }
            return $this;
        } else {
            if(!isset($this->_sql_parts['where'])) {
                $this->_sql_parts['where'] = new Where();
            }
            return $this->_sql_parts['where'];
        }
    }

    public function toSql(string $function = null): string
    {
        return parent::toSql('DELETE'); // TODO: Change the autogenerated stub
    }

}